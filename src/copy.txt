/* eslint-disable no-undef */
/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react/jsx-key */
/* eslint-disable react/no-unknown-property */
/* eslint-disable no-unused-vars */
import { useEffect, useState } from "react";
import BookRow from "../../components/bookRow";
import { getDataFromLocalStorage } from "../../Utils/Utils";


export const App = () => {
	// main array of objects state || books state || books array of objects
	
  const [books, setBooks] = useState(getDataFromLocalStorage());
	// input field states
	const [title, setTitle] = useState("");
	const [author, setAuthor] = useState("");
  const [isbn, setisbn] = useState("");
	const [pubYear, setPubYear] = useState("");


  //clear input
  const cleareInput = ()=>{
    setTitle("");
    setAuthor("");
    setisbn("");
    setPubYear("");
  }
	// form submit event
	const handleSubmit = (e)=>{
    e.preventDefault();

    //creating a book object
    const book = {
      title,
      author,
      isbn,
      pubYear
    }

    setBooks([...books, book])
    cleareInput();

  }

	// delete book from LS
	const deleteBook = (id)=>{
    const dilit = books.filter((book)=> book.isbn !== id);
    setBooks(dilit)
  }

  const removeAll= ()=>{
    setBooks([])
  }
	// saving data to local storage
  useEffect(()=>{
    localStorage.setItem("books", JSON.stringify(books))
  },[books])
	
	return (
		<div className="wrapper">
			<h1>BookList App</h1>
			<p>Add and view your books using local storage</p>
			<div className="main">
				<div className="form-container">
					<form
            onSubmit={handleSubmit}
						className="form-group"
					>
						<label>Title</label>
						<input
							type="text"
              value={title}
              onChange={(e)=>setTitle(e.target.value)}
							className="form-control"
							required
						></input>
						<br></br>
						<label>Author</label>
						<input
							type="text"
							className="form-control"
							required
              value={author}
              onChange={(e)=>setAuthor(e.target.value)}
						></input>
						<br></br>
						<label>ISBN#</label>
						<input
							type="text"
							className="form-control"
							required
              value={isbn}
              onChange={(e)=>setisbn(e.target.value)}
						></input>
						<br></br>
						<label>Pulish Year</label>
						<input
							type="text"
							className="form-control"
							required
              value={pubYear}
              onChange={(e)=>setPubYear(e.target.value)}
						></input>
						<br></br>
						<button
							type="submit"
							className="btn btn-success btn-md"
						>
							ADD
						</button>
					</form>
				</div>

				<div className="view-container">
						<>
							<div className="table-responsive">
								<table className="table">
									<thead>
										<tr>
											<th>ISBN#</th>
											<th>Title</th>
											<th>Author</th>
											<th>Publishd Year</th>
											<th>Delete</th>
										</tr>
									</thead>
									<tbody>
                    {
                      books.map(book=> <BookRow book={book} key={book.ISBN} deleteBook={deleteBook} />)
                    }
									</tbody>
								</table>
							</div>
							<button
              onClick={removeAll}
								className="btn btn-danger btn-md"
							>
								Remove All
							</button>
						</>			
				</div>
			</div>
		</div>
	);
};

export default App;

